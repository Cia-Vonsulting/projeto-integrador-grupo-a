name: CICD

on:

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  pre-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create layer zips
        run: |
          cd ./layers/web-scrapping-layer
          TEMP_DIR=`mktemp -d`
          mkdir $TEMP_DIR/python 
          pip install -r requirements.txt -t $TEMP_DIR/python
          zip web-scrapping-layer.zip $TEMP_DIR/python

  build:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Build package of the project
      run: aws cloudformation package --template-file cloudformation.yml --s3-bucket ${{ vars.AWS_BUCKET_ARTIFACT }} --s3-prefix builds --output-template-file cfstack_package.yml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: cfstack-$REPO_NAME
        template: cfstack_package.yml
        capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
